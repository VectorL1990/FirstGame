/*
	Generated by KBEngine!
	Please do not modify this file!
	
	tools = kbcmd
*/

#pragma once

#include "KBECommon.h"
#include "EntityCall.h"
#include "KBETypes.h"
#include "CustomDataTypes.h"

// defined in */scripts/entity_defs/Account.def

class KBENGINEPLUGINS_API EntityBaseEntityCall_AccountBase : public EntityCall
{
public:
	EntityBaseEntityCall_AccountBase() : EntityCall()
	{
		type = ENTITYCALL_TYPE_BASE;
	}

	void reqAddFriend(const FString& arg1);
	void reqAllRuneDataFromServer();
	void reqAnswerAddFriendRequest(uint8 arg1, uint64 arg2);
	void reqAnswerFriendMatch(uint8 arg1, const FString& arg2, const FString& arg3, int32 arg4);
	void reqBuy(const FString& arg1, uint8 arg2);
	void reqCancelMatch();
	void reqChangeCurSelectCharacter(const FString& arg1);
	void reqDeleteFriend(const FString& arg1);
	void reqEnsureEnterRoom();
	void reqFriendMatch(const REQ_TEAM_MATCH_DATA& arg1, const STRING_LIST& arg2, const FString& arg3);
	void reqLoadLevelModelList();
	void reqMallInfoList();
	void reqNotifyRecieveAddFriendRequest(uint64 arg1);
	void reqOneOneMatch(const FString& arg1, const FString& arg2);
	void reqPlayerInfo();
	void reqPlayerTagInfoList(const STRING_LIST& arg1);
	void reqRankList();
	void reqRelogonInfo();
	void reqSendMessageToFriend(const FString& arg1, const FString& arg2);
	void reqSetRuneConfigDataToServer(const FString& arg1, uint8 arg2, uint8 arg3, uint8 arg4, uint8 arg5);
	void reqSimpleSingleMatch(const FString& arg1, const FString& arg2);
	void reqSingleMatch(const FString& arg1, const FString& arg2);
};

class KBENGINEPLUGINS_API EntityCellEntityCall_AccountBase : public EntityCall
{
public:
	EntityCellEntityCall_AccountBase() : EntityCall()
	{
		type = ENTITYCALL_TYPE_CELL;
	}

};
