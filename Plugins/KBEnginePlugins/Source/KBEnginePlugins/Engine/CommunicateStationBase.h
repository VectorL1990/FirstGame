/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class CommunicateStation : public CommunicateStationBase)
	tools = kbcmd
*/

#pragma once
#include "KBECommon.h"
#include "Entity.h"
#include "KBETypes.h"
#include "ServerErrorDescrs.h"
#include "EntityCallCommunicateStationBase.h"

class Method;
class Property;
class MemoryStream;

// defined in */scripts/entity_defs/CommunicateStation.def
class KBENGINEPLUGINS_API CommunicateStationBase : public Entity
{
public:
	EntityBaseEntityCall_CommunicateStationBase* pBaseEntityCall;
	EntityCellEntityCall_CommunicateStationBase* pCellEntityCall;


	virtual void dispatchActorCorrectInfo(const PHYSACTOR_INFO& arg1) = 0; 
	virtual void dispatchBattleEnd(const BYTE_LIST& arg1, const BATTLE_RESULT& arg2) = 0; 
	virtual void dispatchBattleStart(int32 arg1) = 0; 
	virtual void dispatchCalPrizeResult(int32 arg1, int32 arg2, int32 arg3, int32 arg4, int32 arg5, const STRING_LIST& arg6) = 0; 
	virtual void dispatchCharacterCorrectInfo(const CHARACTER_CORRECT_INFO& arg1) = 0; 
	virtual void dispatchEndCorrectInfo() = 0; 
	virtual void dispatchGeneralCorrectInfo(int32 arg1, int32 arg2, int32 arg3, int32 arg4, int32 arg5, int32 arg6, int32 arg7, int32 arg8, const FString& arg9, int32 arg10) = 0; 
	virtual void dispatchGroupCorrectInfo(const ENERMY_GROUP_CORRECT_INFO& arg1) = 0; 
	virtual void dispatchLevelInfo(const PLAYER_SPAWN_POINT_LIST& arg1, const ENERMY_SPAWN_GROUP_LIST& arg2, const PHYSACTOR_SPAWN_LIST& arg3, const FString& arg4, const SPECIAL_FRAME_LIST& arg5) = 0; 
	virtual void dispatchLineCorrectInfo(const PHYSLINE_INFO& arg1) = 0; 
	virtual void dispatchLogicFrame(const LOGIC_FRAME& arg1) = 0; 
	virtual void dispatchLostRoundInfo(const BATTLE_RESULT_ROUND_LIST& arg1) = 0; 
	virtual void dispatchMainMachine(uint8 arg1) = 0; 
	virtual void dispatchMakeUpFrames(const LOGIC_FRAME_LIST& arg1) = 0; 
	virtual void dispatchNextRound(int8 arg1, const BYTE_LIST& arg2) = 0; 
	virtual void dispatchPointCorrectInfo(const PHYSPOINT_INFO& arg1) = 0; 
	virtual void dispatchPolyCorrectInfo(const PHYSPOLY_INFO& arg1) = 0; 
	virtual void dispatchReactionPairCorrectInfo(const REACTION_PAIR_INFO& arg1) = 0; 
	virtual void dispatchReadLevelResult(uint8 arg1) = 0; 
	virtual void dispatchRelogonInfo(const FString& arg1, int32 arg2, const PLAYER_ROLETYPE_ASSIGNNUM_LIST& arg3, const BATTLE_RESULT& arg4, int8 arg5, const FString& arg6) = 0; 
	virtual void dispatchRelogonPlayerInfo(const PLAYER_INFO& arg1, const GOODS_LIST& arg2) = 0; 
	virtual void dispatchStopUploadCorrectInfo() = 0; 

	void onGetBase() override;
	void onGetCell() override;
	void onLoseCell() override;

	EntityCall* getBaseEntityCall() override;
	EntityCall* getCellEntityCall() override;

	void onRemoteMethodCall(Method* pMethod, MemoryStream& stream) override;
	void onUpdatePropertys(Property* pProp, MemoryStream& stream) override;
	void callPropertysSetMethods() override;

	CommunicateStationBase();
	virtual ~CommunicateStationBase();

};

